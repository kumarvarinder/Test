//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("KanrishaModel", "FK_TB_UserProfile_TB_Role", "TB_Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KanrishaEF.TB_Role), "TB_UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KanrishaEF.TB_UserProfile), true)]
[assembly: EdmRelationshipAttribute("KanrishaModel", "FK_TB_UserProfile_TB_User", "TB_User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KanrishaEF.TB_User), "TB_UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KanrishaEF.TB_UserProfile), true)]
[assembly: EdmRelationshipAttribute("KanrishaModel", "FK_TB_Building_TB_Condominium", "TB_Condominium", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KanrishaEF.TB_Condominium), "TB_Building", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KanrishaEF.TB_Building), true)]
[assembly: EdmRelationshipAttribute("KanrishaModel", "FK_TB_REL_CondoUser_TB_Condominium", "TB_Condominium", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KanrishaEF.TB_Condominium), "TB_REL_CondoUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KanrishaEF.TB_REL_CondoUser), true)]
[assembly: EdmRelationshipAttribute("KanrishaModel", "FK_TB_REL_CondoUser_TB_Role", "TB_Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KanrishaEF.TB_Role), "TB_REL_CondoUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KanrishaEF.TB_REL_CondoUser), true)]
[assembly: EdmRelationshipAttribute("KanrishaModel", "FK_TB_REL_CondoUser_TB_User", "TB_User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KanrishaEF.TB_User), "TB_REL_CondoUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KanrishaEF.TB_REL_CondoUser), true)]

#endregion

namespace KanrishaEF
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class KanrishaEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new KanrishaEntities object using the connection string found in the 'KanrishaEntities' section of the application configuration file.
        /// </summary>
        public KanrishaEntities() : base("name=KanrishaEntities", "KanrishaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new KanrishaEntities object.
        /// </summary>
        public KanrishaEntities(string connectionString) : base(connectionString, "KanrishaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new KanrishaEntities object.
        /// </summary>
        public KanrishaEntities(EntityConnection connection) : base(connection, "KanrishaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TB_Role> TB_Role
        {
            get
            {
                if ((_TB_Role == null))
                {
                    _TB_Role = base.CreateObjectSet<TB_Role>("TB_Role");
                }
                return _TB_Role;
            }
        }
        private ObjectSet<TB_Role> _TB_Role;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TB_User> TB_User
        {
            get
            {
                if ((_TB_User == null))
                {
                    _TB_User = base.CreateObjectSet<TB_User>("TB_User");
                }
                return _TB_User;
            }
        }
        private ObjectSet<TB_User> _TB_User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TB_UserProfile> TB_UserProfile
        {
            get
            {
                if ((_TB_UserProfile == null))
                {
                    _TB_UserProfile = base.CreateObjectSet<TB_UserProfile>("TB_UserProfile");
                }
                return _TB_UserProfile;
            }
        }
        private ObjectSet<TB_UserProfile> _TB_UserProfile;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TB_Building> TB_Building
        {
            get
            {
                if ((_TB_Building == null))
                {
                    _TB_Building = base.CreateObjectSet<TB_Building>("TB_Building");
                }
                return _TB_Building;
            }
        }
        private ObjectSet<TB_Building> _TB_Building;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TB_Condominium> TB_Condominium
        {
            get
            {
                if ((_TB_Condominium == null))
                {
                    _TB_Condominium = base.CreateObjectSet<TB_Condominium>("TB_Condominium");
                }
                return _TB_Condominium;
            }
        }
        private ObjectSet<TB_Condominium> _TB_Condominium;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TB_REL_CondoUser> TB_REL_CondoUser
        {
            get
            {
                if ((_TB_REL_CondoUser == null))
                {
                    _TB_REL_CondoUser = base.CreateObjectSet<TB_REL_CondoUser>("TB_REL_CondoUser");
                }
                return _TB_REL_CondoUser;
            }
        }
        private ObjectSet<TB_REL_CondoUser> _TB_REL_CondoUser;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TB_Role EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTB_Role(TB_Role tB_Role)
        {
            base.AddObject("TB_Role", tB_Role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TB_User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTB_User(TB_User tB_User)
        {
            base.AddObject("TB_User", tB_User);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TB_UserProfile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTB_UserProfile(TB_UserProfile tB_UserProfile)
        {
            base.AddObject("TB_UserProfile", tB_UserProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TB_Building EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTB_Building(TB_Building tB_Building)
        {
            base.AddObject("TB_Building", tB_Building);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TB_Condominium EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTB_Condominium(TB_Condominium tB_Condominium)
        {
            base.AddObject("TB_Condominium", tB_Condominium);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TB_REL_CondoUser EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTB_REL_CondoUser(TB_REL_CondoUser tB_REL_CondoUser)
        {
            base.AddObject("TB_REL_CondoUser", tB_REL_CondoUser);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KanrishaModel", Name="TB_Building")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TB_Building : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TB_Building object.
        /// </summary>
        /// <param name="buildingID">Initial value of the BuildingID property.</param>
        public static TB_Building CreateTB_Building(global::System.Int32 buildingID)
        {
            TB_Building tB_Building = new TB_Building();
            tB_Building.BuildingID = buildingID;
            return tB_Building;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuildingID
        {
            get
            {
                return _BuildingID;
            }
            set
            {
                if (_BuildingID != value)
                {
                    OnBuildingIDChanging(value);
                    ReportPropertyChanging("BuildingID");
                    _BuildingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BuildingID");
                    OnBuildingIDChanged();
                }
            }
        }
        private global::System.Int32 _BuildingID;
        partial void OnBuildingIDChanging(global::System.Int32 value);
        partial void OnBuildingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuildingName
        {
            get
            {
                return _BuildingName;
            }
            set
            {
                OnBuildingNameChanging(value);
                ReportPropertyChanging("BuildingName");
                _BuildingName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BuildingName");
                OnBuildingNameChanged();
            }
        }
        private global::System.String _BuildingName;
        partial void OnBuildingNameChanging(global::System.String value);
        partial void OnBuildingNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CondominiumId
        {
            get
            {
                return _CondominiumId;
            }
            set
            {
                OnCondominiumIdChanging(value);
                ReportPropertyChanging("CondominiumId");
                _CondominiumId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CondominiumId");
                OnCondominiumIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CondominiumId;
        partial void OnCondominiumIdChanging(Nullable<global::System.Int32> value);
        partial void OnCondominiumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuildingArea
        {
            get
            {
                return _BuildingArea;
            }
            set
            {
                OnBuildingAreaChanging(value);
                ReportPropertyChanging("BuildingArea");
                _BuildingArea = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BuildingArea");
                OnBuildingAreaChanged();
            }
        }
        private global::System.String _BuildingArea;
        partial void OnBuildingAreaChanging(global::System.String value);
        partial void OnBuildingAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Aparments
        {
            get
            {
                return _Aparments;
            }
            set
            {
                OnAparmentsChanging(value);
                ReportPropertyChanging("Aparments");
                _Aparments = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Aparments");
                OnAparmentsChanged();
            }
        }
        private Nullable<global::System.Int32> _Aparments;
        partial void OnAparmentsChanging(Nullable<global::System.Int32> value);
        partial void OnAparmentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private global::System.String _Area;
        partial void OnAreaChanging(global::System.String value);
        partial void OnAreaChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanrishaModel", "FK_TB_Building_TB_Condominium", "TB_Condominium")]
        public TB_Condominium TB_Condominium
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_Condominium>("KanrishaModel.FK_TB_Building_TB_Condominium", "TB_Condominium").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_Condominium>("KanrishaModel.FK_TB_Building_TB_Condominium", "TB_Condominium").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TB_Condominium> TB_CondominiumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_Condominium>("KanrishaModel.FK_TB_Building_TB_Condominium", "TB_Condominium");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TB_Condominium>("KanrishaModel.FK_TB_Building_TB_Condominium", "TB_Condominium", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KanrishaModel", Name="TB_Condominium")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TB_Condominium : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TB_Condominium object.
        /// </summary>
        /// <param name="condominiumID">Initial value of the CondominiumID property.</param>
        /// <param name="condoName">Initial value of the CondoName property.</param>
        /// <param name="condoAddress">Initial value of the CondoAddress property.</param>
        /// <param name="condoCity">Initial value of the CondoCity property.</param>
        /// <param name="condoZip">Initial value of the CondoZip property.</param>
        /// <param name="condoCountry">Initial value of the CondoCountry property.</param>
        public static TB_Condominium CreateTB_Condominium(global::System.Int32 condominiumID, global::System.String condoName, global::System.String condoAddress, global::System.String condoCity, global::System.String condoZip, global::System.String condoCountry)
        {
            TB_Condominium tB_Condominium = new TB_Condominium();
            tB_Condominium.CondominiumID = condominiumID;
            tB_Condominium.CondoName = condoName;
            tB_Condominium.CondoAddress = condoAddress;
            tB_Condominium.CondoCity = condoCity;
            tB_Condominium.CondoZip = condoZip;
            tB_Condominium.CondoCountry = condoCountry;
            return tB_Condominium;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CondominiumID
        {
            get
            {
                return _CondominiumID;
            }
            set
            {
                if (_CondominiumID != value)
                {
                    OnCondominiumIDChanging(value);
                    ReportPropertyChanging("CondominiumID");
                    _CondominiumID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CondominiumID");
                    OnCondominiumIDChanged();
                }
            }
        }
        private global::System.Int32 _CondominiumID;
        partial void OnCondominiumIDChanging(global::System.Int32 value);
        partial void OnCondominiumIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CondoName
        {
            get
            {
                return _CondoName;
            }
            set
            {
                OnCondoNameChanging(value);
                ReportPropertyChanging("CondoName");
                _CondoName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CondoName");
                OnCondoNameChanged();
            }
        }
        private global::System.String _CondoName;
        partial void OnCondoNameChanging(global::System.String value);
        partial void OnCondoNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CondoAddress
        {
            get
            {
                return _CondoAddress;
            }
            set
            {
                OnCondoAddressChanging(value);
                ReportPropertyChanging("CondoAddress");
                _CondoAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CondoAddress");
                OnCondoAddressChanged();
            }
        }
        private global::System.String _CondoAddress;
        partial void OnCondoAddressChanging(global::System.String value);
        partial void OnCondoAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CondoCity
        {
            get
            {
                return _CondoCity;
            }
            set
            {
                OnCondoCityChanging(value);
                ReportPropertyChanging("CondoCity");
                _CondoCity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CondoCity");
                OnCondoCityChanged();
            }
        }
        private global::System.String _CondoCity;
        partial void OnCondoCityChanging(global::System.String value);
        partial void OnCondoCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CondoZip
        {
            get
            {
                return _CondoZip;
            }
            set
            {
                OnCondoZipChanging(value);
                ReportPropertyChanging("CondoZip");
                _CondoZip = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CondoZip");
                OnCondoZipChanged();
            }
        }
        private global::System.String _CondoZip;
        partial void OnCondoZipChanging(global::System.String value);
        partial void OnCondoZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CondoCountry
        {
            get
            {
                return _CondoCountry;
            }
            set
            {
                OnCondoCountryChanging(value);
                ReportPropertyChanging("CondoCountry");
                _CondoCountry = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CondoCountry");
                OnCondoCountryChanged();
            }
        }
        private global::System.String _CondoCountry;
        partial void OnCondoCountryChanging(global::System.String value);
        partial void OnCondoCountryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanrishaModel", "FK_TB_Building_TB_Condominium", "TB_Building")]
        public EntityCollection<TB_Building> TB_Building
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TB_Building>("KanrishaModel.FK_TB_Building_TB_Condominium", "TB_Building");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TB_Building>("KanrishaModel.FK_TB_Building_TB_Condominium", "TB_Building", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanrishaModel", "FK_TB_REL_CondoUser_TB_Condominium", "TB_REL_CondoUser")]
        public EntityCollection<TB_REL_CondoUser> TB_REL_CondoUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TB_REL_CondoUser>("KanrishaModel.FK_TB_REL_CondoUser_TB_Condominium", "TB_REL_CondoUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TB_REL_CondoUser>("KanrishaModel.FK_TB_REL_CondoUser_TB_Condominium", "TB_REL_CondoUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KanrishaModel", Name="TB_REL_CondoUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TB_REL_CondoUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TB_REL_CondoUser object.
        /// </summary>
        /// <param name="condoUserID">Initial value of the CondoUserID property.</param>
        public static TB_REL_CondoUser CreateTB_REL_CondoUser(global::System.Int32 condoUserID)
        {
            TB_REL_CondoUser tB_REL_CondoUser = new TB_REL_CondoUser();
            tB_REL_CondoUser.CondoUserID = condoUserID;
            return tB_REL_CondoUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CondoUserID
        {
            get
            {
                return _CondoUserID;
            }
            set
            {
                if (_CondoUserID != value)
                {
                    OnCondoUserIDChanging(value);
                    ReportPropertyChanging("CondoUserID");
                    _CondoUserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CondoUserID");
                    OnCondoUserIDChanged();
                }
            }
        }
        private global::System.Int32 _CondoUserID;
        partial void OnCondoUserIDChanging(global::System.Int32 value);
        partial void OnCondoUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CondominiumID
        {
            get
            {
                return _CondominiumID;
            }
            set
            {
                OnCondominiumIDChanging(value);
                ReportPropertyChanging("CondominiumID");
                _CondominiumID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CondominiumID");
                OnCondominiumIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CondominiumID;
        partial void OnCondominiumIDChanging(Nullable<global::System.Int32> value);
        partial void OnCondominiumIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RoleID;
        partial void OnRoleIDChanging(Nullable<global::System.Int32> value);
        partial void OnRoleIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanrishaModel", "FK_TB_REL_CondoUser_TB_Condominium", "TB_Condominium")]
        public TB_Condominium TB_Condominium
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_Condominium>("KanrishaModel.FK_TB_REL_CondoUser_TB_Condominium", "TB_Condominium").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_Condominium>("KanrishaModel.FK_TB_REL_CondoUser_TB_Condominium", "TB_Condominium").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TB_Condominium> TB_CondominiumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_Condominium>("KanrishaModel.FK_TB_REL_CondoUser_TB_Condominium", "TB_Condominium");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TB_Condominium>("KanrishaModel.FK_TB_REL_CondoUser_TB_Condominium", "TB_Condominium", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanrishaModel", "FK_TB_REL_CondoUser_TB_Role", "TB_Role")]
        public TB_Role TB_Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_Role>("KanrishaModel.FK_TB_REL_CondoUser_TB_Role", "TB_Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_Role>("KanrishaModel.FK_TB_REL_CondoUser_TB_Role", "TB_Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TB_Role> TB_RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_Role>("KanrishaModel.FK_TB_REL_CondoUser_TB_Role", "TB_Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TB_Role>("KanrishaModel.FK_TB_REL_CondoUser_TB_Role", "TB_Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanrishaModel", "FK_TB_REL_CondoUser_TB_User", "TB_User")]
        public TB_User TB_User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_User>("KanrishaModel.FK_TB_REL_CondoUser_TB_User", "TB_User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_User>("KanrishaModel.FK_TB_REL_CondoUser_TB_User", "TB_User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TB_User> TB_UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_User>("KanrishaModel.FK_TB_REL_CondoUser_TB_User", "TB_User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TB_User>("KanrishaModel.FK_TB_REL_CondoUser_TB_User", "TB_User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KanrishaModel", Name="TB_Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TB_Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TB_Role object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static TB_Role CreateTB_Role(global::System.Int32 roleId)
        {
            TB_Role tB_Role = new TB_Role();
            tB_Role.RoleId = roleId;
            return tB_Role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanrishaModel", "FK_TB_UserProfile_TB_Role", "TB_UserProfile")]
        public EntityCollection<TB_UserProfile> TB_UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TB_UserProfile>("KanrishaModel.FK_TB_UserProfile_TB_Role", "TB_UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TB_UserProfile>("KanrishaModel.FK_TB_UserProfile_TB_Role", "TB_UserProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanrishaModel", "FK_TB_REL_CondoUser_TB_Role", "TB_REL_CondoUser")]
        public EntityCollection<TB_REL_CondoUser> TB_REL_CondoUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TB_REL_CondoUser>("KanrishaModel.FK_TB_REL_CondoUser_TB_Role", "TB_REL_CondoUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TB_REL_CondoUser>("KanrishaModel.FK_TB_REL_CondoUser_TB_Role", "TB_REL_CondoUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KanrishaModel", Name="TB_User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TB_User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TB_User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static TB_User CreateTB_User(global::System.Int32 userID, global::System.String userName, global::System.String password, global::System.String active)
        {
            TB_User tB_User = new TB_User();
            tB_User.UserID = userID;
            tB_User.UserName = userName;
            tB_User.Password = password;
            tB_User.Active = active;
            return tB_User;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.String _Active;
        partial void OnActiveChanging(global::System.String value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstLogin
        {
            get
            {
                return _FirstLogin;
            }
            set
            {
                OnFirstLoginChanging(value);
                ReportPropertyChanging("FirstLogin");
                _FirstLogin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstLogin");
                OnFirstLoginChanged();
            }
        }
        private global::System.String _FirstLogin;
        partial void OnFirstLoginChanging(global::System.String value);
        partial void OnFirstLoginChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanrishaModel", "FK_TB_UserProfile_TB_User", "TB_UserProfile")]
        public EntityCollection<TB_UserProfile> TB_UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TB_UserProfile>("KanrishaModel.FK_TB_UserProfile_TB_User", "TB_UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TB_UserProfile>("KanrishaModel.FK_TB_UserProfile_TB_User", "TB_UserProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanrishaModel", "FK_TB_REL_CondoUser_TB_User", "TB_REL_CondoUser")]
        public EntityCollection<TB_REL_CondoUser> TB_REL_CondoUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TB_REL_CondoUser>("KanrishaModel.FK_TB_REL_CondoUser_TB_User", "TB_REL_CondoUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TB_REL_CondoUser>("KanrishaModel.FK_TB_REL_CondoUser_TB_User", "TB_REL_CondoUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KanrishaModel", Name="TB_UserProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TB_UserProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TB_UserProfile object.
        /// </summary>
        /// <param name="profileId">Initial value of the ProfileId property.</param>
        public static TB_UserProfile CreateTB_UserProfile(global::System.Int32 profileId)
        {
            TB_UserProfile tB_UserProfile = new TB_UserProfile();
            tB_UserProfile.ProfileId = profileId;
            return tB_UserProfile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                if (_ProfileId != value)
                {
                    OnProfileIdChanging(value);
                    ReportPropertyChanging("ProfileId");
                    _ProfileId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProfileId");
                    OnProfileIdChanged();
                }
            }
        }
        private global::System.Int32 _ProfileId;
        partial void OnProfileIdChanging(global::System.Int32 value);
        partial void OnProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RoleId;
        partial void OnRoleIdChanging(Nullable<global::System.Int32> value);
        partial void OnRoleIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanrishaModel", "FK_TB_UserProfile_TB_Role", "TB_Role")]
        public TB_Role TB_Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_Role>("KanrishaModel.FK_TB_UserProfile_TB_Role", "TB_Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_Role>("KanrishaModel.FK_TB_UserProfile_TB_Role", "TB_Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TB_Role> TB_RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_Role>("KanrishaModel.FK_TB_UserProfile_TB_Role", "TB_Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TB_Role>("KanrishaModel.FK_TB_UserProfile_TB_Role", "TB_Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KanrishaModel", "FK_TB_UserProfile_TB_User", "TB_User")]
        public TB_User TB_User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_User>("KanrishaModel.FK_TB_UserProfile_TB_User", "TB_User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_User>("KanrishaModel.FK_TB_UserProfile_TB_User", "TB_User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TB_User> TB_UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TB_User>("KanrishaModel.FK_TB_UserProfile_TB_User", "TB_User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TB_User>("KanrishaModel.FK_TB_UserProfile_TB_User", "TB_User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
